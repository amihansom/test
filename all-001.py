#============================================================
#--------------------------------------------------
# 업비트 플랫폼
import pyupbit
import time
import datetime
import numpy as np
from pandas import DataFrame

import requests
#--------------------------------------------------
#============================================================

#============================================================
#--------------------------------------------------
# 바이낸스 플랫폼
#import ccxt
import pprint
import pandas as pd
#import time
#import datetime
import math
#--------------------------------------------------
#============================================================


#######################################################################################################################################
#######################################################################################################################################
#####        변동성 돌파 자동 매매                                                                                                  #####
#######################################################################################################################################
#######################################################################################################################################






#######################################################################################################################################
#######################################################################################################################################
#####        엑세스키, 시크릿키 가져오기, 코인설정                                                                                   #####
#######################################################################################################################################
#######################################################################################################################################

#============================================================
#--------------------------------------------------
#++++++++++++++++++++++++++++++++++++++++
# 업비트 - 시작

# 흥효꺼
# 엑세스키, 시크릿키 가져오기
###################################
# 2024년 05월 04일 - 업비트 api 만료.
###################################
upbit_access = "b77IRfaE4YgWxAGLsSYHjrS2AzyzZtTRQwNnyunR"
upbit_secret = "fnB0toANVSmZuL7rGSzUUpWYIxUexiY94qp4dxpJ"

##### 업비트 로그인 시도 #####
# class instance, object
upbit = pyupbit.Upbit( upbit_access, upbit_secret )
print( "업비트 로그인" )


# 코인명 가져오기
upbit_coin1 = "BTC" # 비트코인 - 크라켄 상장, 그레이스케일 상장
upbit_coinMode1 = 1 # 0 = 매매중지, 1 = 매도매수가능, 2 = 매수만가능, 3 = 매도만가능
upbit_bpPer1 = 1    # 매수비중


# 원화코인 변수 설정
upbit_krw_coin1 = "KRW-" + upbit_coin1



# 매수가능금액
upbit_lowBuyPrice = 11000
# 최소 매도가능금액
upbit_lowSellPrice = 6000

# 업비트 - 종료
#++++++++++++++++++++++++++++++++++++++++
#--------------------------------------------------
#============================================================




######################################################################################################################################################

#######################################
##### 자동매매 시작전 보유 코인 현황 ####
#######################################

print( "==================================================" )
print( "--------------------------------------------------" )
print( "00. 자동매매 시작 전 보유코인 현황" )
print( "--------------------------------------------------" )
print( "==================================================" )
print( "" )
print( "" )
print( "" )


######################################################################################################################################################
######################################################################################################################################################
######################################################################################################################################################



#============================================================
#--------------------------------------------------
#++++++++++++++++++++++++++++++++++++++++
# 업비트 - 시작


# 새로 시작시 upbit_volatility_mode 설정
# 중간새로시작 = 1, 변동성금액설정 후 = 2
upbit_volatility_mode = 1

###############################
# 코인1

# 보유수량 불러오기
upbit_krw_balance1 = upbit.get_balance( upbit_krw_coin1 )
# 코인 현재가 불러오기
upbit_price1 = pyupbit.get_current_price( upbit_krw_coin1 )
# 보유코인 원화금액으로 계산하기
upbit_bp1 = upbit_price1 * upbit_krw_balance1
# 코인 보유 현황 출력.
print( "==================================================" )
print( "= 01-1. 업비트 코인보유여부 - 시작                 =" )
print( "--------------------------------------------------" )
print( f"[ 01-1. 코인명 : { upbit_krw_coin1 } ]" )
print( f"[ 01-1. 현재가 = ￦{ upbit_price1 } ]" )
print( f"[ 01-1. 보유수량 = { upbit_krw_balance1 } ]" )
print( f"[ 01-1. 평가금액 = ￦{ upbit_bp1 } ]" )

# 코인 보유 유무
if upbit_bp1 >= upbit_lowSellPrice:     # 최소매도가능금액
    # 다음 코인 매매 가능유무  -  1 = 매수가능-매도불가 , 2 = 매수불가-매도가능
    upbit_op_mode1 = 2

    # 매매 가능 출력.
    print( f"[ 01-1. 매수불가 - 매도가능 ]" )
    #print( "" )
elif upbit_bp1 < upbit_lowSellPrice:     # 최소매도가능금액
    # 다음 코인 매매 가능유무  -  1 = 매수가능-매도불가 , 2 = 매수불가-매도가능
    upbit_op_mode1 = 1

    # 매매 가능 출력.
    print( f"[ 01-1. 매수가능 - 매도불가 ]" )
    #print( "" )

# 1초 딜레이.
time.sleep( 1 )
###############################


print( "--------------------------------------------------" )
print( "= 01-1. 업비트 코인보유여부 - 종료                 =" )
print( "==================================================" )
print( "" )


# 업비트 - 종료
#++++++++++++++++++++++++++++++++++++++++
#--------------------------------------------------
#============================================================






#============================================================
#--------------------------------------------------
#++++++++++++++++++++++++++++++++++++++++
# 바이낸스 - 시작




# 바이낸스 - 종료
#++++++++++++++++++++++++++++++++++++++++
#--------------------------------------------------
#============================================================








######################################################################################################################################################
######################################################################################################################################################
######################################################################################################################################################


print()
print()
print( "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" )
print()
print()


# 변동성 가격 설정하기


#########################
##### 자동 매매 시작 #####
while True:
    # 현재 시간 불러오기
    now = datetime.datetime.now()


    # 장시작전 일괄매도
    if now.hour == 8 and now.minute == 59 and 50 <= now.second <= 59:   # 8시 59분 50초~59초사이
        # 매도 조건문
        if upbit_volatility_mode == 2: # op_mode00가 1. 일괄매도 후 변동성설정 전 2. 변동성설정 후
            print( "==================================================" )
            print( "=  01-2. 업비트 일괄매도 - 시작                    =" )
            print( "--------------------------------------------------" )
        
            ###############################
            # 코인1 - 매도시작

            if upbit_op_mode1 == 2:   # op_mode1가 2. 매도가능 - 매수불가일때
                print( "" )
                print( f"[ 01-2. 매도시간 : {now} ]" )
                print( f"[ 01-2. 코인명 : {upbit_krw_coin1} ]" )
                print( f"[ 01-2. 현재가 = ￦{upbit_price1} ]" )
                print( f"[ 01-2. 보유수량 = {upbit_krw_balance1} ]" )
                print( f"[ 01-2. 평가금액 = ￦{upbit_bp1} ]" )

                if upbit_bp1 >= upbit_lowSellPrice:    # 매도할 금액이 최소 매도가능금액인 upbit_lowSellPrice 보다 높을때 매도
                    # 매도할 코인명 - upbit_krw_coin1, 매도할 코인수량 - upbit_krw_balance1
                    upbit.sell_market_order( upbit_krw_coin1, upbit_krw_balance1 )

                # 코인 매수 가능유무  -  1 = 매수가능-매도불가 , 2 = 매수불가-매도가능
                upbit_op_mode1 = 1

            # 코인1 - 매도종료
            ###############################

            print( "--------------------------------------------------" )
            print( "=  01-2. 업비트 일괄매도 - 완료                    =" )
            print( "==================================================" )
            print()

            print()
            print()
            print( "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" )
            print()
            print()



            # 1. 변동성 설정 전으로
            upbit_volatility_mode = 1







    else:     # 매수가능할때
        # 장시작 후 매수가 계산
        # upbit_volatility_mode 중간새로시작 = 1, 변동성금액설정 후 = 2
        if upbit_volatility_mode == 1 or now.hour == 9 and now.minute == 0 and 10 <= now.second <= 20:   # upbit_volatility_mode 중간새로시작 = 1 와 9시 00분 10초~20초사이
            # 코인 매수가 계산
            print( "==================================================" )
            print( "=  01-3. 업비트 변동성돌파 금액계산 - 시작          =" )
            print( "--------------------------------------------------" )

            #if upbit_volatility_mode == 1:      # upbit_volatility_mode 중간새로시작 = 1, 변동성금액설정 후 = 2
            ###############################
            # 코인1 변동성돌파금액


            # 코인 현재가 불러오기
            upbit_price1 = pyupbit.get_current_price( upbit_krw_coin1 )
            # 보유수량 불러오기
            upbit_krw_balance1 = upbit.get_balance( upbit_krw_coin1 )
            
            # 보유코인 원화금액으로 계산하기
            upbit_bp1 = upbit_price1 * upbit_krw_balance1

            # 코인 데이타 불러오기
            upbit_df1 = pyupbit.get_ohlcv( upbit_krw_coin1, "day" )
            # 어제 값 가져오기
            upbit_yesterday1 = upbit_df1.iloc[ -2 ]
            # 오늘 값 가져오기
            upbit_today1 = upbit_df1.iloc[ -1 ]

            # 어제 고가
            upbit_yesterdayHigh1 = upbit_yesterday1[ 'high' ]
            # 어제 저가
            upbit_yesterdayLow1 = upbit_yesterday1[ 'low' ]
            # 어제 값의 변동성 값 구하기 = 어제 최고가 - 어제 최저가
            upbit_yesterday_range1 = upbit_yesterdayHigh1 - upbit_yesterdayLow1
            print( f"[ 01-3. 변동폭 ( ￦{upbit_yesterday_range1} ) = 어제고가 ( ￦{upbit_yesterdayHigh1} ) - 어제저가 ( ￦{upbit_yesterdayLow1} ) ]" )

            # 금일 시작가
            upbit_todayOpen1 = upbit_today1[ 'open' ]
            # 금일 변동성매수가계산 = 금일 시작가 + ( 변동폭 * 0.5 )
            upbit_target1 = upbit_todayOpen1 + ( upbit_yesterday_range1 * 0.5 )
            print( f"[ 01-3. 금일 매수가 ( ￦{upbit_target1} ) = 금일시작가 ( ￦{upbit_todayOpen1} ) - ( 어제변동폭 ( ￦{upbit_yesterday_range1} ) ) * 0.5 ]" )
            
            print( f"[ 01-3. 변동성조정시간 : {now} ]" )
            print( f"[ 01-3. 코인명 : {upbit_krw_coin1} ]" )
            print( f"[ 01-3. 변동성돌파금액설정 : {upbit_target1} ]" )
            print( f"[ 01-3. 현재가 = ￦{upbit_price1} ]" )
            print( f"[ 01-3. 보유수량 = {upbit_krw_balance1} ]" )
            print( f"[ 01-3. 평가금액 = ￦{upbit_bp1} ]" )
            print()

            # 1초 딜레이.
            time.sleep(1)
            # 코인1 변동성돌파금액
            ###############################



            #################################################################################################
            # upbit_volatility_mode 중간새로시작 = 1, 변동성금액설정 후 = 2
            upbit_volatility_mode = 2
            # 변동성금액 설정완료
            print( f"[ 01-3. 업비트 변동성모드 변경 = {upbit_volatility_mode} = 변동성금액설정완료 ]" )

            # 매수가능한 보유 현금
            upbit_krw = int( upbit.get_balance( "KRW" ) )
            # 보유코인평가금액 현금 총 합.
            upbit_nowTotalKrw = upbit_krw
            print( f"[ 01-3. 업비트 변동성금액 조정 후 총자본(코인보유중인 평가금액 + 보유현금) = {upbit_nowTotalKrw} ]" )
            # 코인별 매수가능 현금
            upbit_nowBuyPrice = ( upbit_nowTotalKrw / 1 ) * 0.9   # 현재 코인 1개 매매중
            print( f"[ 01-3. 업비트 각 코인별 매수가능한 현금 = {upbit_nowBuyPrice} ]" )
            print( "--------------------------------------------------" )
            print( "=  01-3. 업비트 변동성돌파 금액계산 - 완료          =" )
            print( "==================================================" )
            print()

            print()
            print()
            print( "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" )
            print()
            print()
            #################################################################################################

            

        else:
            ###############################
            # 매수시작

            if upbit_volatility_mode == 2:  # op_mode00가 1. 일괄매도 후 변동성설정 전 2. 변동성설정 후

                ###############################
                # 코인1 - 매수시작

                if upbit_op_mode1 == 1:   # 코인 매수 가능유무  -  1. 매수가능 - 매도불가, 2. 매수불가 - 매도가능
                    # 코인 현재가 불러오기
                    upbit_price1 = pyupbit.get_current_price( upbit_krw_coin1 )

                    if upbit_price1 > upbit_target1:  # 현재가(upbit_price1)가 변동성돌파금액(upbit_CalCoinPrice1)보다 높으면 매수시작
                        print( "==================================================" )
                        print( "=  01-4. 업비트 매수시도 - 시작                    =" )
                        print( "--------------------------------------------------" )

                        # 매수가능금액 불러오기
                        upbit_krw1 = int( upbit.get_balance( "KRW" ) )
                        #upbit_krw1 = int( upbit.get_balance( "KRW" ) )
                        print( f"[ 01-4. 매수가능금액 = {upbit_krw1} ]" )

                        # 보유수량 불러오기
                        upbit_krw_balance1 = upbit.get_balance( upbit_krw_coin1 )

                        # 보유코인 원화금액으로 계산하기
                        upbit_bp1 = upbit_price1 * upbit_krw_balance1

                        print( f"[ 01-4. 매수시간 : {now} ]" )
                        print( f"[ 01-4. 코인명 : {upbit_krw_coin1} ]" )
                        print( f"[ 01-4. 현재가 = ￦{upbit_price1} ]" )
                        print( f"[ 01-4. 변동성금액 = ￦{upbit_target1} ]" )
                        print( f"[ 01-4. 매수전 보유수량 = {upbit_krw_balance1} ]" )
                        print( f"[ 01-4. 평가금액 = ￦{upbit_bp1} ]" )


                        if upbit_bp1 < upbit_lowSellPrice: # 보유코인 평가금액이 최소매도가보다 낮을때 매수시도
                            print( "--------------------------------------------------" )

                            if upbit_krw1 >= upbit_lowBuyPrice: # 매수가능한 금액이 매수할금액보다 클때 매수시도
                                print( f"[ 01-4. 변동성금액돌파 - 매수시도 ]" )
                                print()

                                # 매수할 코인명 - upbit_krw_coin1, 매수할 코인금액 - upbit_nowBuyPrice
                                upbit.buy_market_order( upbit_krw_coin1, upbit_nowBuyPrice )

                                # 1초 딜레이.
                                time.sleep( 1 )

                                # 코인 매수 가능유무  -  1 = 매수가능-매도불가 , 2 = 매수불가-매도가능
                                upbit_op_mode1 = 2

                                # 보유수량 불러오기
                                upbit_krw_balance1 = upbit.get_balance( upbit_krw_coin1 )
                                # 코인 현재가 불러오기
                                upbit_price1 = pyupbit.get_current_price( upbit_krw_coin1 )
                                # 보유코인 원화금액으로 계산하기
                                upbit_bp1 = upbit_price1 * upbit_krw_balance1

                                print( f"[ 01-4. 매수한금액 = ￦{upbit_nowBuyPrice} ]" )
                                print( f"[ 01-4. 현재가 = ￦{upbit_price1} ]" )
                                print( f"[ 01-4. 매수후 보유수량 = {upbit_krw_balance1} ]" )
                                print( f"[ 01-4. 평가금액 = ￦{upbit_bp1} ]" )
                                print( f"[ 01-4. 매수불가-매도가능 ]" )
                                print()
                            else:   # 매수할 금액이 거래소 최소금액보다 작을때
                                print( f"[ 01-4. 매수할 금액( ￦{upbit_krw1} )이 거래소 최소금액( ￦{upbit_lowBuyPrice} )보다 적습니다. ]" )

                                # 코인 매수 가능유무  -  1 = 매수가능-매도불가 , 2 = 매수불가-매도가능
                                upbit_op_mode1 = 2
                                print( f"[ 01-4. 매수불가-매도가능 ]" )
                                print()

                        print( "--------------------------------------------------" )
                        print( "=  01-4. 업비트 매수완료 - 완료                    =" )
                        print( "==================================================" )
                        print()

                        print()
                        print()
                        print( "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" )
                        print()
                        print()

                # 코인1 - 매수종료
                ###############################



    # 1초 딜레이.
    time.sleep( 1 )